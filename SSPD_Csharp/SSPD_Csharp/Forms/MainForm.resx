<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAACAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADNohMpzaIWR86iFonOohjBzqEWRL+fAAjLohcszqEXbc6jF7zOohitzKERHr9/
        AATOohQ/z6EWdc6jGNjOohiMzqMVUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADMmQAFz58YIM6jF2TOoheSzqIXsc6jGKzMoRU8z58VMM6iF27OohitzqMXus6i
        F43LnRQnzKMUMs6iF4fPoxepz6IXz86hF3jMoBZGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAzpwQH8+jFn/OoxfZ0KQY/86iF9HOoRVUz58TNc6iGIzPoxfpz6MX/s6i
        F5LLohcszaEWXM+iF7DPohf1zqMY7M6iF27MmQ0UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAc+hF2XOoxfT0KQY/9CkGP/PoheazKERHs2iGGvOohfU0KQY/86j
        F+bNoRZcyqAYK86jF6bOoxf80KQY/86iGK3LnRQnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMyZDRTPoRZ1z6MX9NCkGP/QpBj/zqEXg8qgGCvPoxepzqMX/NCk
        GP/OohjMyJsSHM2gF0POohji0KQY/9CkGP/Ooxemw5YPEc6jFmnPoRVfAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADGnA4Sz6IXsM+jF/3QpBj/0KQY/8+iF4/LnRQnzqMYwtCk
        GP/QpBj/zqMY2M+fGCDNoxU9zqIX6tCkGP/QpBj/z6MXrsacDhLNohhrz6MX/s6iF+rMoRdMAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtpIAB8+iF6XQpBj/0KQY/9CkGP/OohfDyp0WIs6j
        F7zQpBj/0KQY/9CkGP/NoRZcy6AYNs6iF+fQpBj/0KQY/86iF9HJohchz6EVX86jGPbQpBj/0KQY/8+j
        GMC/nwAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADOoRdiz6IX9dCkGP/QpBj/z6MX786h
        FkTOoxZp0KQY/9CkGP/QpBj/z6IXpcmhDRPOoxjW0KQY/9CkGP/Ooxf8z6MWUM+iFUrPoxfv0KQY/9Ck
        GP/QpBj/z6MX9M+hF1rGjgAJAAAAAAAAAAAAAAAAAAAAAAAAAADMmQAKyqAYK86iF87QpBj/0KQY/9Ck
        GP/Poxepzp0UGs6iGNfQpBj/0KQY/9CkGP/PoxY6z6EVX86jF/zQpBj/0KQY/86iGK3MmQAKzqIXudCk
        GP/QpBj/0KQY/9CkGP/QpBj/z6IXms2iEykAAAAAAAAAAAAAAAAAAAAAAAAAAM6iFDTOoxZ90KQY/9Ck
        GP/QpBj/zqIX+86iF1jMohZb0KQY/9CkGP/QpBj/zqIYwcOWDxHOohfG0KQY/9CkGP/QpBj/zqMWac2j
        FUjOoxj30KQY/9CkGP/QpBj/0KQY/9CkGP/OohfGz6EWagAAAAAAAAAAAAAAAAAAAAAAAAAAzKIWW86j
        F6bQpBj/0KQY/9CkGP/Ooxjsyp4SHc6jGJbQpBj/0KQY/9CkGP/OoxZyzaITKc6iF+rQpBj/0KQY/8+j
        F+TNoBQzzqMWiNCkGP/QpBj/0KQY/9CkGP/QpBj/0KQY/8+jGODPohaUAAAAAAAAAAAAAAAAAAAAAAAA
        AADPoxepzqMY49CkGP/QpBj/0KQY/8+jF+XGnA4Sz6MXqdCkGP/QpBj/0KQY/82iF0LNohZSzqMY9tCk
        GP/QpBj/z6MX0M2iFkfOohe50KQY/9CkGP/QpBj/0KQY/9CkGP/QpBj/0KQY/86iF9QAAAAAAAAAAAAA
        AAAAAAAAAAAAAM6iF7vPoxfw0KQY/9CkGP/QpBj/zqMY48yiFzfOohjt0KQY/9CkGP/QpBj/zaIXQs+j
        FlDOoxj20KQY/9CkGP/OohfRz6IVVc6iF8PQpBj/0KQY/9CkGP/QpBj/0KQY/9CkGP/QpBj/z6MX5AAA
        AAAAAAAAAAAAAAAAAAAAAAAAzqIXu86iF/HQpBj/0KQY/9CkGP/OoxjjzaMVPc+jF/rQpBj/0KQY/9Ck
        GP/NohdCzKAWUc6jGPbQpBj/0KQY/8+iF8/MoBZRzqIYwdCkGP/QpBj/0KQY/9CkGP/QpBj/0KQY/9Ck
        GP/PoxflAAAAAAAAAAAAAAAAAAAAAAAAAADOoxeez6IX2tCkGP/QpBj/0KQY/86jGOPNoRYuz6MY4NCk
        GP/QpBj/0KQY/86jFVPPoxZQz6MX9NCkGP/QpBj/z6IX2s2gFDPOohiX0KQY/9CkGP/QpBj/0KQY/9Ck
        GP/QpBj/0KQY/86jGMsAAAAAAAAAAAAAAAAAAAAAAAAAAMyhF0zOoxeZ0KQY/9CkGP/QpBj/zqIX6M+f
        EBDOoxee0KQY/9CkGP/QpBj/z6MXqc2jFSTOoxjj0KQY/9CkGP/Poxf+zqEVVM6jFnLQpBj/0KQY/9Ck
        GP/QpBj/0KQY/9CkGP/OoxjYzqIXhwAAAAAAAAAAAAAAAAAAAAAAAAAAy6IXLM+jF2/Ooxf80KQY/9Ck
        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
        MP//44w///jnH//899////////////////8=
</value>
  </data>
</root>